<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
		spring bean configuration file
		: 안녕 난 bean을 만드는 XML이야
	 -->
	 
	 <!-- 1. 디폴트 생성자 + setter 
	 		: setter injection 방식 
	 -->
	 		
	 		
	 <!-- 
	 	1) 디폴트 생성자
	 		<bean id="객체" class="클래스명"></bean>
	 		<bean id="객체" class="클래스명"/>
	 		
	 	2) setter
	 		<property name="필드명">
	 			<value>값</value>
	 		</property>
	 		<property name="필드명">
	 			<ref bean="객체명"/>
	 		</property>
	  -->
	  
	  <!-- 
  		지금부터 아래 Bean을 생성합니다.
  		Calculator calcultor1 = new Calculator();
	   -->
	   <bean id="calculator1" class="com.koreait.ex01.bean01.Calculator"></bean>
	   <!-- 
	   	지금부터 아래 Bean을 생성한다.
	   	EngineerCalculator eCalculator1 = new EngineerCalculator();
	   	eCalculator.setA(7);
	   	eCalculator.setB(2);
	   	eCalculator.setCalculator(calculator1);
	    -->
	    
	    <bean id="eCalculator1" class="com.koreait.ex01.EngineerCalculator">
	    	<property name="a">
	    		<value>7</value>
	    	</property>
	    	<property name="b">
	    		<value>2</value>
	    	</property>
	    	<property name="calculator">
	    		<ref bean="calculator1"/>
	    	</property>
	    </bean>
	    
	    <!-- 
	    	다음 Bean을 생성해 본다.
	    	Calculator calculator2 = new Calculator();
	    	EngineerCalculator = eCalculator2 = new EngineerCalculator();
	    	eCalculator2.setA(12);
	    	eCalculator2.setB(7);
	    	eCalculator2.setCalculator(calculator2);
	     -->
	    
	
	     <bean class="com.koreait.ex01.bean01.Calculator" id="calculator2"/>
	     
	     <bean class="com.koreait.ex01.EngineerCalculator" id="eCalculator2">
	     	<property name="calculator" ref="calculator2"/>
	     	<property name="a" value="12"/>
	     	<property name="b" value="7"/>
	     </bean>

		<!-- 
			2.필드값을 받아오는 생성자
			: constructor injection
		 -->
		 <!-- 
		 	<bean class="클래스명" id ="객체명">
		 		<contructor-arg>
		 			<value>1번째 인수</value> 		반드시 순서대로
		 		</constructor-arg>
		 		<contructor-arg>
		 			<value>2번째 인수</value> 		
		 		</constructor-arg>
		 		<contructor-arg>
		 			<ref bean="3번째 인(객체명)"/>	
		 		</constructor-arg>
		 	</bean>
		  -->
		  <!-- 
		  		Calculator calculator3 = new Calculator();
		  		EngineerCalcultor eCalculator3 = new EngineerCalculator(25, 12, calculator3);
		   -->
		  
		  <bean class="com.koreait.ex01.bean01.Calculator" id="calculator3"/>
		  <bean class="com.koreait.ex01.EngineerCalculator" id="eCalculator3">
		  	<constructor-arg>
		  		<value>25</value>
		  	</constructor-arg>
		  	<constructor-arg>
		  		<value>12</value>
		  	</constructor-arg>
		  	<constructor-arg>
		  		<ref bean="calculator3"/>
		  	</constructor-arg>
		  </bean>
		  
		  <bean class="com.koreait.ex01.bean01.Calculator" id="calculator4"/>
		  <bean class="com.koreait.ex01.EngineerCalculator" id="eCalculator4">
		  	<constructor-arg value="100"/>
		  	<constructor-arg value="500"/>
		  	<constructor-arg ref="calculator4"/>
		  </bean>
</beans>
